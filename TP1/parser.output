Terminals unused in grammar

   DOT


Grammar

    0 $accept: program $end

    1 program: declarations statements RETURN SEMI functions_optional

    2 declarations: declarations declaration
    3             | declaration

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 declaration: $@1 type names $@2 SEMI

    7 type: INT
    8     | CHAR
    9     | FLOAT
   10     | DOUBLE
   11     | VOID

   12 names: names COMMA variable
   13      | names COMMA init
   14      | variable
   15      | init

   16 variable: ID
   17         | pointer ID
   18         | ID array

   19 pointer: pointer MULOP
   20        | MULOP

   21 array: array LBRACK expression RBRACK
   22      | LBRACK expression RBRACK

   23 init: var_init
   24     | array_init

   25 var_init: ID ASSIGN constant

   26 array_init: ID array ASSIGN LBRACE values RBRACE

   27 values: values COMMA constant
   28       | constant

   29 statements: statements statement
   30           | statement

   31 statement: if_statement
   32          | for_statement
   33          | while_statement
   34          | assigment SEMI
   35          | CONTINUE SEMI
   36          | BREAK SEMI
   37          | function_call SEMI
   38          | ID INCR SEMI
   39          | INCR ID SEMI

   40 if_statement: IF LPAREN expression RPAREN tail else_if optional_else
   41             | IF LPAREN expression RPAREN tail optional_else

   42 else_if: else_if ELSE IF LPAREN expression RPAREN tail
   43        | ELSE IF LPAREN expression RPAREN tail

   44 optional_else: ELSE tail
   45              | /* empty */

   46 for_statement: FOR LPAREN assigment SEMI expression SEMI expression RPAREN tail

   47 while_statement: WHILE LPAREN expression RPAREN tail

   48 tail: LBRACE statements RBRACE

   49 expression: expression ADDOP expression
   50           | expression MULOP expression
   51           | expression DIVOP expression
   52           | ID INCR
   53           | INCR ID
   54           | expression OROP expression
   55           | expression ANDOP expression
   56           | NOTOP expression
   57           | expression EQUOP expression
   58           | expression RELOP expression
   59           | LPAREN expression RPAREN
   60           | var_ref
   61           | sign constant
   62           | function_call

   63 sign: ADDOP
   64     | /* empty */

   65 constant: ICONST
   66         | FCONST
   67         | CCONST

   68 assigment: var_ref ASSIGN expression

   69 var_ref: variable
   70        | REFER variable

   71 function_call: ID LPAREN call_params RPAREN

   72 call_params: call_param
   73            | STRING
   74            | /* empty */

   75 call_param: call_param COMMA expression
   76           | expression

   77 functions_optional: functions
   78                   | /* empty */

   79 functions: functions function
   80          | function

   81 $@3: /* empty */

   82 function: $@3 function_head function_tail

   83 $@4: /* empty */

   84 $@5: /* empty */

   85 function_head: $@4 return_type ID LPAREN $@5 parameters_optional RPAREN

   86 return_type: type
   87            | type pointer

   88 parameters_optional: parameters
   89                    | /* empty */

   90 parameters: parameters COMMA parameter
   91           | parameter

   92 $@6: /* empty */

   93 parameter: $@6 type variable

   94 function_tail: LBRACE declarations_optional statements_optional return_optional RBRACE

   95 declarations_optional: declarations
   96                      | /* empty */

   97 statements_optional: statements
   98                    | /* empty */

   99 return_optional: RETURN expression SEMI
  100                | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAR (258) 8
INT (259) 7
FLOAT (260) 9
DOUBLE (261) 10
IF (262) 40 41 42 43
ELSE (263) 42 43 44
WHILE (264) 47
FOR (265) 46
CONTINUE (266) 35
BREAK (267) 36
VOID (268) 11
RETURN (269) 1 99
ADDOP (270) 49 63
MULOP (271) 19 20 50
DIVOP (272) 51
INCR (273) 38 39 52 53
OROP (274) 54
ANDOP (275) 55
NOTOP (276) 56
EQUOP (277) 57
RELOP (278) 58
LPAREN (279) 40 41 42 43 46 47 59 71 85
RPAREN (280) 40 41 42 43 46 47 59 71 85
LBRACK (281) 21 22
RBRACK (282) 21 22
LBRACE (283) 26 48 94
RBRACE (284) 26 48 94
SEMI (285) 1 6 34 35 36 37 38 39 46 99
DOT (286)
COMMA (287) 12 13 27 75 90
ASSIGN (288) 25 26 68
REFER (289) 70
ID (290) 16 17 18 25 26 38 39 52 53 71 85
ICONST (291) 65
FCONST (292) 66
CCONST (293) 67
STRING (294) 73


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
declarations (42)
    on left: 2 3, on right: 1 2 95
declaration (43)
    on left: 6, on right: 2 3
$@1 (44)
    on left: 4, on right: 6
$@2 (45)
    on left: 5, on right: 6
type (46)
    on left: 7 8 9 10 11, on right: 6 86 87 93
names (47)
    on left: 12 13 14 15, on right: 6 12 13
variable (48)
    on left: 16 17 18, on right: 12 14 69 70 93
pointer (49)
    on left: 19 20, on right: 17 19 87
array (50)
    on left: 21 22, on right: 18 21 26
init (51)
    on left: 23 24, on right: 13 15
var_init (52)
    on left: 25, on right: 23
array_init (53)
    on left: 26, on right: 24
values (54)
    on left: 27 28, on right: 26 27
statements (55)
    on left: 29 30, on right: 1 29 48 97
statement (56)
    on left: 31 32 33 34 35 36 37 38 39, on right: 29 30
if_statement (57)
    on left: 40 41, on right: 31
else_if (58)
    on left: 42 43, on right: 40 42
optional_else (59)
    on left: 44 45, on right: 40 41
for_statement (60)
    on left: 46, on right: 32
while_statement (61)
    on left: 47, on right: 33
tail (62)
    on left: 48, on right: 40 41 42 43 44 46 47
expression (63)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62, on right: 21
    22 40 41 42 43 46 47 49 50 51 54 55 56 57 58 59 68 75 76 99
sign (64)
    on left: 63 64, on right: 61
constant (65)
    on left: 65 66 67, on right: 25 27 28 61
assigment (66)
    on left: 68, on right: 34 46
var_ref (67)
    on left: 69 70, on right: 60 68
function_call (68)
    on left: 71, on right: 37 62
call_params (69)
    on left: 72 73 74, on right: 71
call_param (70)
    on left: 75 76, on right: 72 75
functions_optional (71)
    on left: 77 78, on right: 1
functions (72)
    on left: 79 80, on right: 77 79
function (73)
    on left: 82, on right: 79 80
$@3 (74)
    on left: 81, on right: 82
function_head (75)
    on left: 85, on right: 82
$@4 (76)
    on left: 83, on right: 85
$@5 (77)
    on left: 84, on right: 85
return_type (78)
    on left: 86 87, on right: 85
parameters_optional (79)
    on left: 88 89, on right: 85
parameters (80)
    on left: 90 91, on right: 88 90
parameter (81)
    on left: 93, on right: 90 91
$@6 (82)
    on left: 92, on right: 93
function_tail (83)
    on left: 94, on right: 82
declarations_optional (84)
    on left: 95 96, on right: 94
statements_optional (85)
    on left: 97 98, on right: 94
return_optional (86)
    on left: 99 100, on right: 94


state 0

    0 $accept: . program $end

    $default  reduce using rule 4 ($@1)

    program       go to state 1
    declarations  go to state 2
    declaration   go to state 3
    $@1           go to state 4


state 1

    0 $accept: program . $end

    $end  shift, and go to state 5


state 2

    1 program: declarations . statements RETURN SEMI functions_optional
    2 declarations: declarations . declaration

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    $default  reduce using rule 4 ($@1)

    declaration      go to state 15
    $@1              go to state 4
    variable         go to state 16
    pointer          go to state 17
    statements       go to state 18
    statement        go to state 19
    if_statement     go to state 20
    for_statement    go to state 21
    while_statement  go to state 22
    assigment        go to state 23
    var_ref          go to state 24
    function_call    go to state 25


state 3

    3 declarations: declaration .

    $default  reduce using rule 3 (declarations)


state 4

    6 declaration: $@1 . type names $@2 SEMI

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    DOUBLE  shift, and go to state 29
    VOID    shift, and go to state 30

    type  go to state 31


state 5

    0 $accept: program $end .

    $default  accept


state 6

   40 if_statement: IF . LPAREN expression RPAREN tail else_if optional_else
   41             | IF . LPAREN expression RPAREN tail optional_else

    LPAREN  shift, and go to state 32


state 7

   47 while_statement: WHILE . LPAREN expression RPAREN tail

    LPAREN  shift, and go to state 33


state 8

   46 for_statement: FOR . LPAREN assigment SEMI expression SEMI expression RPAREN tail

    LPAREN  shift, and go to state 34


state 9

   35 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 35


state 10

   36 statement: BREAK . SEMI

    SEMI  shift, and go to state 36


state 11

   20 pointer: MULOP .

    $default  reduce using rule 20 (pointer)


state 12

   39 statement: INCR . ID SEMI

    ID  shift, and go to state 37


state 13

   70 var_ref: REFER . variable

    MULOP  shift, and go to state 11
    ID     shift, and go to state 38

    variable  go to state 39
    pointer   go to state 17


state 14

   16 variable: ID .
   18         | ID . array
   38 statement: ID . INCR SEMI
   71 function_call: ID . LPAREN call_params RPAREN

    INCR    shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACK  shift, and go to state 42

    $default  reduce using rule 16 (variable)

    array  go to state 43


state 15

    2 declarations: declarations declaration .

    $default  reduce using rule 2 (declarations)


state 16

   69 var_ref: variable .

    $default  reduce using rule 69 (var_ref)


state 17

   17 variable: pointer . ID
   19 pointer: pointer . MULOP

    MULOP  shift, and go to state 44
    ID     shift, and go to state 45


state 18

    1 program: declarations statements . RETURN SEMI functions_optional
   29 statements: statements . statement

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    RETURN    shift, and go to state 46
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    variable         go to state 16
    pointer          go to state 17
    statement        go to state 47
    if_statement     go to state 20
    for_statement    go to state 21
    while_statement  go to state 22
    assigment        go to state 23
    var_ref          go to state 24
    function_call    go to state 25


state 19

   30 statements: statement .

    $default  reduce using rule 30 (statements)


state 20

   31 statement: if_statement .

    $default  reduce using rule 31 (statement)


state 21

   32 statement: for_statement .

    $default  reduce using rule 32 (statement)


state 22

   33 statement: while_statement .

    $default  reduce using rule 33 (statement)


state 23

   34 statement: assigment . SEMI

    SEMI  shift, and go to state 48


state 24

   68 assigment: var_ref . ASSIGN expression

    ASSIGN  shift, and go to state 49


state 25

   37 statement: function_call . SEMI

    SEMI  shift, and go to state 50


state 26

    8 type: CHAR .

    $default  reduce using rule 8 (type)


state 27

    7 type: INT .

    $default  reduce using rule 7 (type)


state 28

    9 type: FLOAT .

    $default  reduce using rule 9 (type)


state 29

   10 type: DOUBLE .

    $default  reduce using rule 10 (type)


state 30

   11 type: VOID .

    $default  reduce using rule 11 (type)


state 31

    6 declaration: $@1 type . names $@2 SEMI

    MULOP  shift, and go to state 11
    ID     shift, and go to state 51

    names       go to state 52
    variable    go to state 53
    pointer     go to state 17
    init        go to state 54
    var_init    go to state 55
    array_init  go to state 56


state 32

   40 if_statement: IF LPAREN . expression RPAREN tail else_if optional_else
   41             | IF LPAREN . expression RPAREN tail optional_else

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 62
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 33

   47 while_statement: WHILE LPAREN . expression RPAREN tail

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 66
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 34

   46 for_statement: FOR LPAREN . assigment SEMI expression SEMI expression RPAREN tail

    MULOP  shift, and go to state 11
    REFER  shift, and go to state 13
    ID     shift, and go to state 38

    variable   go to state 16
    pointer    go to state 17
    assigment  go to state 67
    var_ref    go to state 24


state 35

   35 statement: CONTINUE SEMI .

    $default  reduce using rule 35 (statement)


state 36

   36 statement: BREAK SEMI .

    $default  reduce using rule 36 (statement)


state 37

   39 statement: INCR ID . SEMI

    SEMI  shift, and go to state 68


state 38

   16 variable: ID .
   18         | ID . array

    LBRACK  shift, and go to state 42

    $default  reduce using rule 16 (variable)

    array  go to state 43


state 39

   70 var_ref: REFER variable .

    $default  reduce using rule 70 (var_ref)


state 40

   38 statement: ID INCR . SEMI

    SEMI  shift, and go to state 69


state 41

   71 function_call: ID LPAREN . call_params RPAREN

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61
    STRING  shift, and go to state 70

    RPAREN    reduce using rule 74 (call_params)
    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 71
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65
    call_params    go to state 72
    call_param     go to state 73


state 42

   22 array: LBRACK . expression RBRACK

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 74
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 43

   18 variable: ID array .
   21 array: array . LBRACK expression RBRACK

    LBRACK  shift, and go to state 75

    $default  reduce using rule 18 (variable)


state 44

   19 pointer: pointer MULOP .

    $default  reduce using rule 19 (pointer)


state 45

   17 variable: pointer ID .

    $default  reduce using rule 17 (variable)


state 46

    1 program: declarations statements RETURN . SEMI functions_optional

    SEMI  shift, and go to state 76


state 47

   29 statements: statements statement .

    $default  reduce using rule 29 (statements)


state 48

   34 statement: assigment SEMI .

    $default  reduce using rule 34 (statement)


state 49

   68 assigment: var_ref ASSIGN . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 77
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 50

   37 statement: function_call SEMI .

    $default  reduce using rule 37 (statement)


state 51

   16 variable: ID .
   18         | ID . array
   25 var_init: ID . ASSIGN constant
   26 array_init: ID . array ASSIGN LBRACE values RBRACE

    LBRACK  shift, and go to state 42
    ASSIGN  shift, and go to state 78

    $default  reduce using rule 16 (variable)

    array  go to state 79


state 52

    6 declaration: $@1 type names . $@2 SEMI
   12 names: names . COMMA variable
   13      | names . COMMA init

    COMMA  shift, and go to state 80

    $default  reduce using rule 5 ($@2)

    $@2  go to state 81


state 53

   14 names: variable .

    $default  reduce using rule 14 (names)


state 54

   15 names: init .

    $default  reduce using rule 15 (names)


state 55

   23 init: var_init .

    $default  reduce using rule 23 (init)


state 56

   24 init: array_init .

    $default  reduce using rule 24 (init)


state 57

   63 sign: ADDOP .

    $default  reduce using rule 63 (sign)


state 58

   53 expression: INCR . ID

    ID  shift, and go to state 82


state 59

   56 expression: NOTOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 83
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 60

   59 expression: LPAREN . expression RPAREN

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 84
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 61

   16 variable: ID .
   18         | ID . array
   52 expression: ID . INCR
   71 function_call: ID . LPAREN call_params RPAREN

    INCR    shift, and go to state 85
    LPAREN  shift, and go to state 41
    LBRACK  shift, and go to state 42

    $default  reduce using rule 16 (variable)

    array  go to state 43


state 62

   40 if_statement: IF LPAREN expression . RPAREN tail else_if optional_else
   41             | IF LPAREN expression . RPAREN tail optional_else
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 93


state 63

   61 expression: sign . constant

    ICONST  shift, and go to state 94
    FCONST  shift, and go to state 95
    CCONST  shift, and go to state 96

    constant  go to state 97


state 64

   60 expression: var_ref .

    $default  reduce using rule 60 (expression)


state 65

   62 expression: function_call .

    $default  reduce using rule 62 (expression)


state 66

   47 while_statement: WHILE LPAREN expression . RPAREN tail
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 98


state 67

   46 for_statement: FOR LPAREN assigment . SEMI expression SEMI expression RPAREN tail

    SEMI  shift, and go to state 99


state 68

   39 statement: INCR ID SEMI .

    $default  reduce using rule 39 (statement)


state 69

   38 statement: ID INCR SEMI .

    $default  reduce using rule 38 (statement)


state 70

   73 call_params: STRING .

    $default  reduce using rule 73 (call_params)


state 71

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   76 call_param: expression .

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 76 (call_param)


state 72

   71 function_call: ID LPAREN call_params . RPAREN

    RPAREN  shift, and go to state 100


state 73

   72 call_params: call_param .
   75 call_param: call_param . COMMA expression

    COMMA  shift, and go to state 101

    $default  reduce using rule 72 (call_params)


state 74

   22 array: LBRACK expression . RBRACK
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RBRACK  shift, and go to state 102


state 75

   21 array: array LBRACK . expression RBRACK

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 103
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 76

    1 program: declarations statements RETURN SEMI . functions_optional

    $end      reduce using rule 78 (functions_optional)
    $default  reduce using rule 81 ($@3)

    functions_optional  go to state 104
    functions           go to state 105
    function            go to state 106
    $@3                 go to state 107


state 77

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   68 assigment: var_ref ASSIGN expression .

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 68 (assigment)


state 78

   25 var_init: ID ASSIGN . constant

    ICONST  shift, and go to state 94
    FCONST  shift, and go to state 95
    CCONST  shift, and go to state 96

    constant  go to state 108


state 79

   18 variable: ID array .
   21 array: array . LBRACK expression RBRACK
   26 array_init: ID array . ASSIGN LBRACE values RBRACE

    LBRACK  shift, and go to state 75
    ASSIGN  shift, and go to state 109

    $default  reduce using rule 18 (variable)


state 80

   12 names: names COMMA . variable
   13      | names COMMA . init

    MULOP  shift, and go to state 11
    ID     shift, and go to state 51

    variable    go to state 110
    pointer     go to state 17
    init        go to state 111
    var_init    go to state 55
    array_init  go to state 56


state 81

    6 declaration: $@1 type names $@2 . SEMI

    SEMI  shift, and go to state 112


state 82

   53 expression: INCR ID .

    $default  reduce using rule 53 (expression)


state 83

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   56           | NOTOP expression .
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 56 (expression)


state 84

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   59           | LPAREN expression . RPAREN

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 113


state 85

   52 expression: ID INCR .

    $default  reduce using rule 52 (expression)


state 86

   49 expression: expression ADDOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 114
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 87

   50 expression: expression MULOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 115
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 88

   51 expression: expression DIVOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 116
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 89

   54 expression: expression OROP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 117
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 90

   55 expression: expression ANDOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 118
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 91

   57 expression: expression EQUOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 119
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 92

   58 expression: expression RELOP . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 120
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 93

   40 if_statement: IF LPAREN expression RPAREN . tail else_if optional_else
   41             | IF LPAREN expression RPAREN . tail optional_else

    LBRACE  shift, and go to state 121

    tail  go to state 122


state 94

   65 constant: ICONST .

    $default  reduce using rule 65 (constant)


state 95

   66 constant: FCONST .

    $default  reduce using rule 66 (constant)


state 96

   67 constant: CCONST .

    $default  reduce using rule 67 (constant)


state 97

   61 expression: sign constant .

    $default  reduce using rule 61 (expression)


state 98

   47 while_statement: WHILE LPAREN expression RPAREN . tail

    LBRACE  shift, and go to state 121

    tail  go to state 123


state 99

   46 for_statement: FOR LPAREN assigment SEMI . expression SEMI expression RPAREN tail

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 124
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 100

   71 function_call: ID LPAREN call_params RPAREN .

    $default  reduce using rule 71 (function_call)


state 101

   75 call_param: call_param COMMA . expression

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 125
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 102

   22 array: LBRACK expression RBRACK .

    $default  reduce using rule 22 (array)


state 103

   21 array: array LBRACK expression . RBRACK
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RBRACK  shift, and go to state 126


state 104

    1 program: declarations statements RETURN SEMI functions_optional .

    $default  reduce using rule 1 (program)


state 105

   77 functions_optional: functions .
   79 functions: functions . function

    $end      reduce using rule 77 (functions_optional)
    $default  reduce using rule 81 ($@3)

    function  go to state 127
    $@3       go to state 107


state 106

   80 functions: function .

    $default  reduce using rule 80 (functions)


state 107

   82 function: $@3 . function_head function_tail

    $default  reduce using rule 83 ($@4)

    function_head  go to state 128
    $@4            go to state 129


state 108

   25 var_init: ID ASSIGN constant .

    $default  reduce using rule 25 (var_init)


state 109

   26 array_init: ID array ASSIGN . LBRACE values RBRACE

    LBRACE  shift, and go to state 130


state 110

   12 names: names COMMA variable .

    $default  reduce using rule 12 (names)


state 111

   13 names: names COMMA init .

    $default  reduce using rule 13 (names)


state 112

    6 declaration: $@1 type names $@2 SEMI .

    $default  reduce using rule 6 (declaration)


state 113

   59 expression: LPAREN expression RPAREN .

    $default  reduce using rule 59 (expression)


state 114

   49 expression: expression . ADDOP expression
   49           | expression ADDOP expression .
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 49 (expression)


state 115

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   50           | expression MULOP expression .
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP  shift, and go to state 86
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 50 (expression)


state 116

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   51           | expression DIVOP expression .
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP  shift, and go to state 86
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 51 (expression)


state 117

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   54           | expression OROP expression .
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ANDOP  shift, and go to state 90

    $default  reduce using rule 54 (expression)


state 118

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   55           | expression ANDOP expression .
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    $default  reduce using rule 55 (expression)


state 119

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   57           | expression EQUOP expression .
   58           | expression . RELOP expression

    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90

    $default  reduce using rule 57 (expression)


state 120

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   58           | expression RELOP expression .

    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91

    $default  reduce using rule 58 (expression)


state 121

   48 tail: LBRACE . statements RBRACE

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    variable         go to state 16
    pointer          go to state 17
    statements       go to state 131
    statement        go to state 19
    if_statement     go to state 20
    for_statement    go to state 21
    while_statement  go to state 22
    assigment        go to state 23
    var_ref          go to state 24
    function_call    go to state 25


state 122

   40 if_statement: IF LPAREN expression RPAREN tail . else_if optional_else
   41             | IF LPAREN expression RPAREN tail . optional_else

    ELSE  shift, and go to state 132

    $default  reduce using rule 45 (optional_else)

    else_if        go to state 133
    optional_else  go to state 134


state 123

   47 while_statement: WHILE LPAREN expression RPAREN tail .

    $default  reduce using rule 47 (while_statement)


state 124

   46 for_statement: FOR LPAREN assigment SEMI expression . SEMI expression RPAREN tail
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92
    SEMI   shift, and go to state 135


state 125

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   75 call_param: call_param COMMA expression .

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92

    $default  reduce using rule 75 (call_param)


state 126

   21 array: array LBRACK expression RBRACK .

    $default  reduce using rule 21 (array)


state 127

   79 functions: functions function .

    $default  reduce using rule 79 (functions)


state 128

   82 function: $@3 function_head . function_tail

    LBRACE  shift, and go to state 136

    function_tail  go to state 137


state 129

   85 function_head: $@4 . return_type ID LPAREN $@5 parameters_optional RPAREN

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    DOUBLE  shift, and go to state 29
    VOID    shift, and go to state 30

    type         go to state 138
    return_type  go to state 139


state 130

   26 array_init: ID array ASSIGN LBRACE . values RBRACE

    ICONST  shift, and go to state 94
    FCONST  shift, and go to state 95
    CCONST  shift, and go to state 96

    values    go to state 140
    constant  go to state 141


state 131

   29 statements: statements . statement
   48 tail: LBRACE statements . RBRACE

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    RBRACE    shift, and go to state 142
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    variable         go to state 16
    pointer          go to state 17
    statement        go to state 47
    if_statement     go to state 20
    for_statement    go to state 21
    while_statement  go to state 22
    assigment        go to state 23
    var_ref          go to state 24
    function_call    go to state 25


state 132

   43 else_if: ELSE . IF LPAREN expression RPAREN tail
   44 optional_else: ELSE . tail

    IF      shift, and go to state 143
    LBRACE  shift, and go to state 121

    tail  go to state 144


state 133

   40 if_statement: IF LPAREN expression RPAREN tail else_if . optional_else
   42 else_if: else_if . ELSE IF LPAREN expression RPAREN tail

    ELSE  shift, and go to state 145

    $default  reduce using rule 45 (optional_else)

    optional_else  go to state 146


state 134

   41 if_statement: IF LPAREN expression RPAREN tail optional_else .

    $default  reduce using rule 41 (if_statement)


state 135

   46 for_statement: FOR LPAREN assigment SEMI expression SEMI . expression RPAREN tail

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 147
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 136

   94 function_tail: LBRACE . declarations_optional statements_optional return_optional RBRACE

    CHAR      reduce using rule 4 ($@1)
    INT       reduce using rule 4 ($@1)
    FLOAT     reduce using rule 4 ($@1)
    DOUBLE    reduce using rule 4 ($@1)
    VOID      reduce using rule 4 ($@1)
    $default  reduce using rule 96 (declarations_optional)

    declarations           go to state 148
    declaration            go to state 3
    $@1                    go to state 4
    declarations_optional  go to state 149


state 137

   82 function: $@3 function_head function_tail .

    $default  reduce using rule 82 (function)


state 138

   86 return_type: type .
   87            | type . pointer

    MULOP  shift, and go to state 11

    $default  reduce using rule 86 (return_type)

    pointer  go to state 150


state 139

   85 function_head: $@4 return_type . ID LPAREN $@5 parameters_optional RPAREN

    ID  shift, and go to state 151


state 140

   26 array_init: ID array ASSIGN LBRACE values . RBRACE
   27 values: values . COMMA constant

    RBRACE  shift, and go to state 152
    COMMA   shift, and go to state 153


state 141

   28 values: constant .

    $default  reduce using rule 28 (values)


state 142

   48 tail: LBRACE statements RBRACE .

    $default  reduce using rule 48 (tail)


state 143

   43 else_if: ELSE IF . LPAREN expression RPAREN tail

    LPAREN  shift, and go to state 154


state 144

   44 optional_else: ELSE tail .

    $default  reduce using rule 44 (optional_else)


state 145

   42 else_if: else_if ELSE . IF LPAREN expression RPAREN tail
   44 optional_else: ELSE . tail

    IF      shift, and go to state 155
    LBRACE  shift, and go to state 121

    tail  go to state 144


state 146

   40 if_statement: IF LPAREN expression RPAREN tail else_if optional_else .

    $default  reduce using rule 40 (if_statement)


state 147

   46 for_statement: FOR LPAREN assigment SEMI expression SEMI expression . RPAREN tail
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 156


state 148

    2 declarations: declarations . declaration
   95 declarations_optional: declarations .

    CHAR      reduce using rule 4 ($@1)
    INT       reduce using rule 4 ($@1)
    FLOAT     reduce using rule 4 ($@1)
    DOUBLE    reduce using rule 4 ($@1)
    VOID      reduce using rule 4 ($@1)
    $default  reduce using rule 95 (declarations_optional)

    declaration  go to state 15
    $@1          go to state 4


state 149

   94 function_tail: LBRACE declarations_optional . statements_optional return_optional RBRACE

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    $default  reduce using rule 98 (statements_optional)

    variable             go to state 16
    pointer              go to state 17
    statements           go to state 157
    statement            go to state 19
    if_statement         go to state 20
    for_statement        go to state 21
    while_statement      go to state 22
    assigment            go to state 23
    var_ref              go to state 24
    function_call        go to state 25
    statements_optional  go to state 158


state 150

   19 pointer: pointer . MULOP
   87 return_type: type pointer .

    MULOP  shift, and go to state 44

    $default  reduce using rule 87 (return_type)


state 151

   85 function_head: $@4 return_type ID . LPAREN $@5 parameters_optional RPAREN

    LPAREN  shift, and go to state 159


state 152

   26 array_init: ID array ASSIGN LBRACE values RBRACE .

    $default  reduce using rule 26 (array_init)


state 153

   27 values: values COMMA . constant

    ICONST  shift, and go to state 94
    FCONST  shift, and go to state 95
    CCONST  shift, and go to state 96

    constant  go to state 160


state 154

   43 else_if: ELSE IF LPAREN . expression RPAREN tail

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 161
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 155

   42 else_if: else_if ELSE IF . LPAREN expression RPAREN tail

    LPAREN  shift, and go to state 162


state 156

   46 for_statement: FOR LPAREN assigment SEMI expression SEMI expression RPAREN . tail

    LBRACE  shift, and go to state 121

    tail  go to state 163


state 157

   29 statements: statements . statement
   97 statements_optional: statements .

    IF        shift, and go to state 6
    WHILE     shift, and go to state 7
    FOR       shift, and go to state 8
    CONTINUE  shift, and go to state 9
    BREAK     shift, and go to state 10
    MULOP     shift, and go to state 11
    INCR      shift, and go to state 12
    REFER     shift, and go to state 13
    ID        shift, and go to state 14

    $default  reduce using rule 97 (statements_optional)

    variable         go to state 16
    pointer          go to state 17
    statement        go to state 47
    if_statement     go to state 20
    for_statement    go to state 21
    while_statement  go to state 22
    assigment        go to state 23
    var_ref          go to state 24
    function_call    go to state 25


state 158

   94 function_tail: LBRACE declarations_optional statements_optional . return_optional RBRACE

    RETURN  shift, and go to state 164

    $default  reduce using rule 100 (return_optional)

    return_optional  go to state 165


state 159

   85 function_head: $@4 return_type ID LPAREN . $@5 parameters_optional RPAREN

    $default  reduce using rule 84 ($@5)

    $@5  go to state 166


state 160

   27 values: values COMMA constant .

    $default  reduce using rule 27 (values)


state 161

   43 else_if: ELSE IF LPAREN expression . RPAREN tail
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 167


state 162

   42 else_if: else_if ELSE IF LPAREN . expression RPAREN tail

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 168
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 163

   46 for_statement: FOR LPAREN assigment SEMI expression SEMI expression RPAREN tail .

    $default  reduce using rule 46 (for_statement)


state 164

   99 return_optional: RETURN . expression SEMI

    ADDOP   shift, and go to state 57
    MULOP   shift, and go to state 11
    INCR    shift, and go to state 58
    NOTOP   shift, and go to state 59
    LPAREN  shift, and go to state 60
    REFER   shift, and go to state 13
    ID      shift, and go to state 61

    $default  reduce using rule 64 (sign)

    variable       go to state 16
    pointer        go to state 17
    expression     go to state 169
    sign           go to state 63
    var_ref        go to state 64
    function_call  go to state 65


state 165

   94 function_tail: LBRACE declarations_optional statements_optional return_optional . RBRACE

    RBRACE  shift, and go to state 170


state 166

   85 function_head: $@4 return_type ID LPAREN $@5 . parameters_optional RPAREN

    RPAREN    reduce using rule 89 (parameters_optional)
    $default  reduce using rule 92 ($@6)

    parameters_optional  go to state 171
    parameters           go to state 172
    parameter            go to state 173
    $@6                  go to state 174


state 167

   43 else_if: ELSE IF LPAREN expression RPAREN . tail

    LBRACE  shift, and go to state 121

    tail  go to state 175


state 168

   42 else_if: else_if ELSE IF LPAREN expression . RPAREN tail
   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression

    ADDOP   shift, and go to state 86
    MULOP   shift, and go to state 87
    DIVOP   shift, and go to state 88
    OROP    shift, and go to state 89
    ANDOP   shift, and go to state 90
    EQUOP   shift, and go to state 91
    RELOP   shift, and go to state 92
    RPAREN  shift, and go to state 176


state 169

   49 expression: expression . ADDOP expression
   50           | expression . MULOP expression
   51           | expression . DIVOP expression
   54           | expression . OROP expression
   55           | expression . ANDOP expression
   57           | expression . EQUOP expression
   58           | expression . RELOP expression
   99 return_optional: RETURN expression . SEMI

    ADDOP  shift, and go to state 86
    MULOP  shift, and go to state 87
    DIVOP  shift, and go to state 88
    OROP   shift, and go to state 89
    ANDOP  shift, and go to state 90
    EQUOP  shift, and go to state 91
    RELOP  shift, and go to state 92
    SEMI   shift, and go to state 177


state 170

   94 function_tail: LBRACE declarations_optional statements_optional return_optional RBRACE .

    $default  reduce using rule 94 (function_tail)


state 171

   85 function_head: $@4 return_type ID LPAREN $@5 parameters_optional . RPAREN

    RPAREN  shift, and go to state 178


state 172

   88 parameters_optional: parameters .
   90 parameters: parameters . COMMA parameter

    COMMA  shift, and go to state 179

    $default  reduce using rule 88 (parameters_optional)


state 173

   91 parameters: parameter .

    $default  reduce using rule 91 (parameters)


state 174

   93 parameter: $@6 . type variable

    CHAR    shift, and go to state 26
    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    DOUBLE  shift, and go to state 29
    VOID    shift, and go to state 30

    type  go to state 180


state 175

   43 else_if: ELSE IF LPAREN expression RPAREN tail .

    $default  reduce using rule 43 (else_if)


state 176

   42 else_if: else_if ELSE IF LPAREN expression RPAREN . tail

    LBRACE  shift, and go to state 121

    tail  go to state 181


state 177

   99 return_optional: RETURN expression SEMI .

    $default  reduce using rule 99 (return_optional)


state 178

   85 function_head: $@4 return_type ID LPAREN $@5 parameters_optional RPAREN .

    $default  reduce using rule 85 (function_head)


state 179

   90 parameters: parameters COMMA . parameter

    $default  reduce using rule 92 ($@6)

    parameter  go to state 182
    $@6        go to state 174


state 180

   93 parameter: $@6 type . variable

    MULOP  shift, and go to state 11
    ID     shift, and go to state 38

    variable  go to state 183
    pointer   go to state 17


state 181

   42 else_if: else_if ELSE IF LPAREN expression RPAREN tail .

    $default  reduce using rule 42 (else_if)


state 182

   90 parameters: parameters COMMA parameter .

    $default  reduce using rule 90 (parameters)


state 183

   93 parameter: $@6 type variable .

    $default  reduce using rule 93 (parameter)
